#!/usr/bin/env bash
set -euo pipefail

ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
BASE_SCRIPT="${ROOT_DIR}/scripts/lcod"
LIB_FILE="${ROOT_DIR}/scripts/lib/common.sh"
OUTPUT_DIR="${ROOT_DIR}/dist"
OUTPUT_FILE="${OUTPUT_DIR}/lcod"

if [[ ! -f "${BASE_SCRIPT}" || ! -f "${LIB_FILE}" ]]; then
  echo "Missing source files." >&2
  exit 1
fi

mkdir -p "${OUTPUT_DIR}"

ROOT_ENV="${ROOT_DIR}" python3 <<'PY'
import os
from datetime import datetime, timezone
from pathlib import Path
root = Path(os.environ['ROOT_ENV'])
base_path = root / 'scripts' / 'lcod'
lib_path = root / 'scripts' / 'lib' / 'common.sh'
out_path = root / 'dist' / 'lcod'

base_lines = base_path.read_text().splitlines()
lib_text = lib_path.read_text()

try:
    idx = next(i for i, line in enumerate(base_lines) if line.strip() == 'set -euo pipefail')
except StopIteration:
    raise SystemExit('Could not find set -euo pipefail in base script')

bundle_lines = []
bundle_lines.append(base_lines[0])  # shebang
bundle_lines.append(f"# Auto-generated by scripts/build-bundle.sh on {datetime.now(timezone.utc):%Y-%m-%dT%H:%M:%SZ}")
for line in base_lines[1:idx+1]:
    bundle_lines.append(line)

bundle_lines.append("")
bundle_lines.append("LCOD_COMMON_EMBEDDED=$(cat <<'LCOD_EOF'")
bundle_lines.append(lib_text.rstrip('\n'))
bundle_lines.append('LCOD_EOF')
bundle_lines.append(')')
bundle_lines.append("")
bundle_lines.extend(base_lines[idx+1:])

out_path.write_text("\n".join(bundle_lines) + "\n")
PY

chmod +x "${OUTPUT_FILE}"
echo "Bundle written to ${OUTPUT_FILE}"
